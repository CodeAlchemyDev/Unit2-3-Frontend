{"ast":null,"code":"var _jsxFileName = \"/Users/amber/Lambda/03_Web Applications II/04_unit-3-build/Unit2-3-Frontend/schoolinthecloud/src/components/forms/Register.js\";\nimport React, { useState } from \"react\";\nimport * as yup from 'yup';\nimport axios from 'axios'; // import styler class for styled components\n\nimport Styler from \"../../assets/styles/styledComponents/styleClass\";\nexport default function Register(props) {\n  // create new instance of styler class\n  const style = new Styler(); //Used to test field validation with taken username values from backend.\n\n  const testerFieldForUsernameAvailability = ['thisss', 'isaaa', 'tester']; // set up yup validation\n\n  const formSchema_Student = yup.object().shape({\n    selector: yup.string(),\n    userName: yup.string().required(\"Username is required\").min(4, \"Username must be longer than 4 characters\"),\n    // .test('username-availability',\"Username is unavailable\",\n    //     function(testerFieldForUsernameAvailability){\n    //         testerFieldForUsernameAvailability.map(item=>{\n    //             item !== userName;\n    //         })\n    //     })\n    password: yup.string().required(\"Please enter a password\").min(3, \"Password must be longer than 3 characters\"),\n    nameFirst: yup.string().required(\"Please enter your first name\"),\n    nameLast: yup.string().required(\"Please enter your last name\"),\n    email: yup.string().email(\"Please enter a valid email address\").required(\"Email address required\"),\n    phone: yup.number().typeError(\"Please enter a valid phone number\").required().min(10, \"Please enter a valid phone number with area code first\"),\n    address: yup.string().required('Please enter your address'),\n    time: yup.string().required(\"Please select a time slot\"),\n    terms: yup.bool().required(\"Please confirm our terms and conditions\").oneOf([true], \"Please agree to our terms and conditions\")\n  });\n  const formSchema_Volunteer = yup.object().shape({\n    selector: yup.string(),\n    userName: yup.string().required(\"Username is required\").min(4, \"Username must be longer than 4 characters\"),\n    // .test('username-availability',\"Username is unavailable\",\n    //     function(testerFieldForUsernameAvailability){\n    //         testerFieldForUsernameAvailability.map(item=>{\n    //             item !== userName;\n    //         })\n    //     }),\n    password: yup.string().required(\"Please enter your password\").min(5, \"Password must be at least 5 characters long\"),\n    nameFirst: yup.string().required(\"Please enter your first name\"),\n    nameLast: yup.string().required(\"Please enter your last name\"),\n    email: yup.string().email(\"Please enter your email address\").required(\"Email address required\"),\n    phone: yup.number().typeError(\"Please enter a valid phone number\").required().min(10, \"Please enter a valid phone number with area code first\"),\n    address: yup.string().required('Please enter your address'),\n    time: yup.string().required(\"Please select a time slot\"),\n    terms: yup.bool().required(\"Please confirm our terms and conditions\").oneOf([true], \"Please agree to our terms and conditions\")\n  }); // Form state and error state respectively\n\n  const [formState, setFormState] = useState({\n    selector: \"\",\n    userName: \"\",\n    password: \"\",\n    nameFirst: \"\",\n    nameLast: \"\",\n    email: \"\",\n    phone: \"\",\n    address: \"\",\n    time: \"\",\n    terms: false\n  });\n  const [errorState, setErrorState] = useState({\n    selector: \"\",\n    userName: \"\",\n    password: \"\",\n    nameFirst: \"\",\n    nameLast: \"\",\n    email: \"\",\n    phone: \"\",\n    address: \"\",\n    time: \"\",\n    terms: false\n  }); // validation on input change\n\n  const validate = e => {\n    yup.reach(formSchema_Student, e.target.name).validate(e.target.value).then(valid => {\n      setErrorState({ ...errorState,\n        [e.target.name]: \"\"\n      });\n    }).catch(err => {\n      setErrorState({ ...errorState,\n        [e.target.name]: err.errors[0]\n      });\n    });\n  };\n\n  const formSubmit = e => {\n    e.preventDefault(); // If volunteer is selected post to volunteer api else submit to student api\n\n    formState.selector === 'volunteer' ? axios.post(\"\").then(response => {\n      console.log(response);\n    }).catch(err => {\n      console.log(err);\n    }) : axios.post(\"\").then(response => {\n      console.log(response);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const inputChange = e => {\n    e.persist();\n    validate(e);\n    let value = e.target.type === \"checkbox\" ? e.target.checked : e.target.value;\n    setFormState({ ...formState,\n      [e.target.name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formSubmit,\n    className: \"registerForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"signInTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, \"Register\"), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"selector\",\n    className: \"registerLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, \"Student or Volunteer?\", /*#__PURE__*/React.createElement(\"select\", {\n    name: \"selector\",\n    id: \"selector\",\n    onChange: inputChange,\n    value: formState.selector,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"student\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 21\n    }\n  }, \"Student\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"volunteer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 21\n    }\n  }, \"Volunteer\"))), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"userName\",\n    className: \"registerLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 17\n    }\n  }, \"Username:\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"signInInput\",\n    type: \"text\",\n    name: \"userName\",\n    id: \"userName\",\n    value: formState.userName,\n    onChange: inputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }\n  }), errorState.userName.length > 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 21\n    }\n  }, errorState.userName) : null), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    className: \"registerLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 17\n    }\n  }, \"Password:\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"signInInput\",\n    type: \"password\",\n    name: \"password\",\n    id: \"password\",\n    value: formState.password,\n    onChange: inputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 17\n    }\n  }), errorState.password.length > 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 21\n    }\n  }, errorState.password) : null), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"nameFirst\",\n    className: \"registerLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 17\n    }\n  }, \"First Name:\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"signInInput\",\n    type: \"text\",\n    name: \"nameFirst\",\n    id: \"nameFirst\",\n    value: formState.nameFirst,\n    onChange: inputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 17\n    }\n  }), errorState.nameFirst.length > 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 21\n    }\n  }, errorState.nameFirst) : null), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"nameLast\",\n    className: \"registerLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 17\n    }\n  }, \"Last Name:\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"signInInput\",\n    type: \"text\",\n    name: \"nameLast\",\n    id: \"nameLast\",\n    value: formState.nameLast,\n    onChange: inputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 17\n    }\n  }), errorState.nameLast.length > 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 21\n    }\n  }, errorState.nameLast) : null), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    className: \"registerLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 17\n    }\n  }, \"Email:\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"signInInput\",\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    value: formState.email,\n    onChange: inputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 17\n    }\n  }), errorState.email.length > 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 21\n    }\n  }, errorState.email) : null), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"phone\",\n    className: \"registerLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 17\n    }\n  }, \"Phone Number:\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"signInInput\",\n    type: \"number\",\n    name: \"phone\",\n    id: \"phone\",\n    value: formState.phone,\n    onChange: inputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 17\n    }\n  }), errorState.phone.length > 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 21\n    }\n  }, errorState.phone) : null), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"address\",\n    className: \"registerLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 17\n    }\n  }, \"Address:\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"signInInput\",\n    type: \"address\",\n    name: \"address\",\n    id: \"address\",\n    value: formState.address,\n    onChange: inputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 17\n    }\n  }), errorState.address.length > 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 21\n    }\n  }, errorState.address) : null), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"time\",\n    className: \"registerLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 17\n    }\n  }, \"Time Available:\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"time\",\n    id: \"time\",\n    onChange: inputChange,\n    value: formState.time,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"6am\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 21\n    }\n  }, \"6:00AM - 9:00AM\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"9am\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 21\n    }\n  }, \"9:00AM - 12:00PM\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"12pm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 21\n    }\n  }, \"12:00PM - 3:00PM\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"3pm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 21\n    }\n  }, \"3:00PM - 6:00PM\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"6pm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 21\n    }\n  }, \"6:00PM - 9:00PM\"))), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"terms\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: \"terms\",\n    name: \"terms\",\n    checked: formState.terms,\n    onChange: inputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 17\n    }\n  }), \"Terms Of Service\"), /*#__PURE__*/React.createElement(style.Button, {\n    text: \"Register\",\n    type: \"submit\",\n    margin: \"10px auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/amber/Lambda/03_Web Applications II/04_unit-3-build/Unit2-3-Frontend/schoolinthecloud/src/components/forms/Register.js"],"names":["React","useState","yup","axios","Styler","Register","props","style","testerFieldForUsernameAvailability","formSchema_Student","object","shape","selector","string","userName","required","min","password","nameFirst","nameLast","email","phone","number","typeError","address","time","terms","bool","oneOf","formSchema_Volunteer","formState","setFormState","errorState","setErrorState","validate","e","reach","target","name","value","then","valid","catch","err","errors","formSubmit","preventDefault","post","response","console","log","inputChange","persist","type","checked","length"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,iDAAnB;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AAEnC;AACA,QAAMC,KAAK,GAAG,IAAIH,MAAJ,EAAd,CAHmC,CAKnC;;AACA,QAAMI,kCAAkC,GAAG,CAAC,QAAD,EAAU,OAAV,EAAkB,QAAlB,CAA3C,CANmC,CAQnC;;AACA,QAAMC,kBAAkB,GAAGP,GAAG,CAACQ,MAAJ,GAAaC,KAAb,CAAmB;AAE1CC,IAAAA,QAAQ,EAAEV,GAAG,CACRW,MADK,EAFgC;AAI1CC,IAAAA,QAAQ,EAAEZ,GAAG,CACRW,MADK,GAELE,QAFK,CAEI,sBAFJ,EAGLC,GAHK,CAGD,CAHC,EAGE,2CAHF,CAJgC;AAQtC;AACA;AACA;AACA;AACA;AACA;AACJC,IAAAA,QAAQ,EAAEf,GAAG,CACRW,MADK,GAELE,QAFK,CAEI,yBAFJ,EAGLC,GAHK,CAGD,CAHC,EAGC,2CAHD,CAdgC;AAkB1CE,IAAAA,SAAS,EAAEhB,GAAG,CACTW,MADM,GAENE,QAFM,CAEG,8BAFH,CAlB+B;AAqB1CI,IAAAA,QAAQ,EAAEjB,GAAG,CACRW,MADK,GAELE,QAFK,CAEI,6BAFJ,CArBgC;AAwB1CK,IAAAA,KAAK,EAAElB,GAAG,CACLW,MADE,GAEFO,KAFE,CAEI,oCAFJ,EAGFL,QAHE,CAGO,wBAHP,CAxBmC;AA4B1CM,IAAAA,KAAK,EAAEnB,GAAG,CACLoB,MADE,GAEFC,SAFE,CAEQ,mCAFR,EAGFR,QAHE,GAIFC,GAJE,CAIE,EAJF,EAIK,wDAJL,CA5BmC;AAiC1CQ,IAAAA,OAAO,EAAEtB,GAAG,CACPW,MADI,GAEJE,QAFI,CAEK,2BAFL,CAjCiC;AAoC1CU,IAAAA,IAAI,EAAEvB,GAAG,CACJW,MADC,GAEDE,QAFC,CAEQ,2BAFR,CApCoC;AAuC1CW,IAAAA,KAAK,EAAExB,GAAG,CACLyB,IADE,GAEFZ,QAFE,CAEO,yCAFP,EAGFa,KAHE,CAGI,CAAC,IAAD,CAHJ,EAGW,0CAHX;AAvCmC,GAAnB,CAA3B;AA6CA,QAAMC,oBAAoB,GAAG3B,GAAG,CAACQ,MAAJ,GAAaC,KAAb,CAAmB;AAC5CC,IAAAA,QAAQ,EAAEV,GAAG,CACRW,MADK,EADkC;AAG5CC,IAAAA,QAAQ,EAAEZ,GAAG,CACRW,MADK,GAELE,QAFK,CAEI,sBAFJ,EAGLC,GAHK,CAGD,CAHC,EAGE,2CAHF,CAHkC;AAOxC;AACA;AACA;AACA;AACA;AACA;AACJC,IAAAA,QAAQ,EAACf,GAAG,CACPW,MADI,GAEJE,QAFI,CAEK,4BAFL,EAGJC,GAHI,CAGA,CAHA,EAGE,6CAHF,CAbmC;AAiB5CE,IAAAA,SAAS,EAAEhB,GAAG,CACTW,MADM,GAENE,QAFM,CAEG,8BAFH,CAjBiC;AAoB5CI,IAAAA,QAAQ,EAAEjB,GAAG,CACRW,MADK,GAELE,QAFK,CAEI,6BAFJ,CApBkC;AAuB5CK,IAAAA,KAAK,EAAElB,GAAG,CACLW,MADE,GAEFO,KAFE,CAEI,iCAFJ,EAGFL,QAHE,CAGO,wBAHP,CAvBqC;AA2B5CM,IAAAA,KAAK,EAAEnB,GAAG,CACLoB,MADE,GAEFC,SAFE,CAEQ,mCAFR,EAGFR,QAHE,GAIFC,GAJE,CAIE,EAJF,EAIK,wDAJL,CA3BqC;AAgC5CQ,IAAAA,OAAO,EAAEtB,GAAG,CACPW,MADI,GAEJE,QAFI,CAEK,2BAFL,CAhCmC;AAmC5CU,IAAAA,IAAI,EAAEvB,GAAG,CACJW,MADC,GAEDE,QAFC,CAEQ,2BAFR,CAnCsC;AAsC5CW,IAAAA,KAAK,EAAExB,GAAG,CACLyB,IADE,GAEFZ,QAFE,CAEO,yCAFP,EAGFa,KAHE,CAGI,CAAC,IAAD,CAHJ,EAGW,0CAHX;AAtCqC,GAAnB,CAA7B,CAtDmC,CAiGnC;;AACA,QAAM,CAACE,SAAD,EAAYC,YAAZ,IAA4B9B,QAAQ,CAAC;AACvCW,IAAAA,QAAQ,EAAC,EAD8B;AAEvCE,IAAAA,QAAQ,EAAC,EAF8B;AAGvCG,IAAAA,QAAQ,EAAC,EAH8B;AAIvCC,IAAAA,SAAS,EAAC,EAJ6B;AAKvCC,IAAAA,QAAQ,EAAC,EAL8B;AAMvCC,IAAAA,KAAK,EAAC,EANiC;AAOvCC,IAAAA,KAAK,EAAC,EAPiC;AAQvCG,IAAAA,OAAO,EAAC,EAR+B;AASvCC,IAAAA,IAAI,EAAC,EATkC;AAUvCC,IAAAA,KAAK,EAAC;AAViC,GAAD,CAA1C;AAaA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BhC,QAAQ,CAAC;AACzCW,IAAAA,QAAQ,EAAC,EADgC;AAEzCE,IAAAA,QAAQ,EAAC,EAFgC;AAGzCG,IAAAA,QAAQ,EAAC,EAHgC;AAIzCC,IAAAA,SAAS,EAAC,EAJ+B;AAKzCC,IAAAA,QAAQ,EAAC,EALgC;AAMzCC,IAAAA,KAAK,EAAC,EANmC;AAOzCC,IAAAA,KAAK,EAAC,EAPmC;AAQzCG,IAAAA,OAAO,EAAC,EARiC;AASzCC,IAAAA,IAAI,EAAC,EAToC;AAUzCC,IAAAA,KAAK,EAAC;AAVmC,GAAD,CAA5C,CA/GmC,CA2HnC;;AACA,QAAMQ,QAAQ,GAAGC,CAAC,IAAI;AAClBjC,IAAAA,GAAG,CACEkC,KADL,CACW3B,kBADX,EAC+B0B,CAAC,CAACE,MAAF,CAASC,IADxC,EAEKJ,QAFL,CAEcC,CAAC,CAACE,MAAF,CAASE,KAFvB,EAGKC,IAHL,CAGUC,KAAK,IAAI;AACXR,MAAAA,aAAa,CAAC,EACV,GAAGD,UADO;AACI,SAACG,CAAC,CAACE,MAAF,CAASC,IAAV,GAAgB;AADpB,OAAD,CAAb;AAGH,KAPL,EAQKI,KARL,CAQWC,GAAG,IAAI;AACVV,MAAAA,aAAa,CAAC,EACV,GAAGD,UADO;AACI,SAACG,CAAC,CAACE,MAAF,CAASC,IAAV,GAAgBK,GAAG,CAACC,MAAJ,CAAW,CAAX;AADpB,OAAD,CAAb;AAGH,KAZL;AAaH,GAdD;;AAgBA,QAAMC,UAAU,GAAGV,CAAC,IAAI;AACpBA,IAAAA,CAAC,CAACW,cAAF,GADoB,CAEpB;;AACAhB,IAAAA,SAAS,CAAClB,QAAV,KAAuB,WAAvB,GACIT,KAAK,CACA4C,IADL,CACU,EADV,EAEKP,IAFL,CAEUQ,QAAQ,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACH,KAJL,EAKKN,KALL,CAKYC,GAAG,IAAI;AACXM,MAAAA,OAAO,CAACC,GAAR,CAAYP,GAAZ;AACH,KAPL,CADJ,GAUIxC,KAAK,CACA4C,IADL,CACU,EADV,EAEKP,IAFL,CAEUQ,QAAQ,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACH,KAJL,EAKKN,KALL,CAKYC,GAAG,IAAI;AACXM,MAAAA,OAAO,CAACC,GAAR,CAAYP,GAAZ;AACH,KAPL,CAVJ;AAkBH,GArBD;;AAuBA,QAAMQ,WAAW,GAAGhB,CAAC,IAAG;AACpBA,IAAAA,CAAC,CAACiB,OAAF;AACAlB,IAAAA,QAAQ,CAACC,CAAD,CAAR;AACA,QAAII,KAAK,GAAGJ,CAAC,CAACE,MAAF,CAASgB,IAAT,KAAkB,UAAlB,GAA+BlB,CAAC,CAACE,MAAF,CAASiB,OAAxC,GAAgDnB,CAAC,CAACE,MAAF,CAASE,KAArE;AACAR,IAAAA,YAAY,CAAC,EAAC,GAAGD,SAAJ;AAAe,OAACK,CAAC,CAACE,MAAF,CAASC,IAAV,GAAgBC;AAA/B,KAAD,CAAZ;AACH,GALD;;AAOA,sBAEI;AAAM,IAAA,QAAQ,EAAEM,UAAhB;AAA4B,IAAA,SAAS,EAAC,cAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAII;AAAO,IAAA,OAAO,EAAC,UAAf;AAA0B,IAAA,SAAS,EAAC,eAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAII;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,EAAE,EAAC,UAFP;AAGI,IAAA,QAAQ,EAAEM,WAHd;AAII,IAAA,KAAK,EAAErB,SAAS,CAAClB,QAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOI;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAPJ,eASI;AAAQ,IAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBATJ,CAJJ,CAJJ,eAuBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBJ,eAyBI;AAAO,IAAA,OAAO,EAAC,UAAf;AAA0B,IAAA,SAAS,EAAC,eAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,eAII;AACI,IAAA,SAAS,EAAC,aADd;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,IAAI,EAAC,UAHT;AAII,IAAA,EAAE,EAAG,UAJT;AAKI,IAAA,KAAK,EAAIkB,SAAS,CAAChB,QALvB;AAMI,IAAA,QAAQ,EAAEqC,WANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAaKnB,UAAU,CAAClB,QAAX,CAAoByC,MAApB,GAA6B,CAA7B,gBACG;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBvB,UAAU,CAAClB,QAAjC,CADH,GAEG,IAfR,CAzBJ,eA4CI;AAAO,IAAA,OAAO,EAAC,UAAf;AAA0B,IAAA,SAAS,EAAC,eAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,eAII;AACI,IAAA,SAAS,EAAC,aADd;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,IAAI,EAAC,UAHT;AAII,IAAA,EAAE,EAAC,UAJP;AAKI,IAAA,KAAK,EAAEgB,SAAS,CAACb,QALrB;AAMI,IAAA,QAAQ,EAAEkC,WANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAaKnB,UAAU,CAACf,QAAX,CAAoBsC,MAApB,GAA6B,CAA7B,gBACG;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBvB,UAAU,CAACf,QAAjC,CADH,GAEG,IAfR,CA5CJ,eA+DI;AAAO,IAAA,OAAO,EAAC,WAAf;AAA2B,IAAA,SAAS,EAAC,eAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,eAII;AACI,IAAA,SAAS,EAAC,aADd;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,IAAI,EAAC,WAHT;AAII,IAAA,EAAE,EAAG,WAJT;AAKI,IAAA,KAAK,EAAIa,SAAS,CAACZ,SALvB;AAMI,IAAA,QAAQ,EAAEiC,WANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAaKnB,UAAU,CAACd,SAAX,CAAqBqC,MAArB,GAA8B,CAA9B,gBACG;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBvB,UAAU,CAACd,SAAjC,CADH,GAEG,IAfR,CA/DJ,eAkFI;AAAO,IAAA,OAAO,EAAC,UAAf;AAA0B,IAAA,SAAS,EAAC,eAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAII;AACI,IAAA,SAAS,EAAC,aADd;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,IAAI,EAAC,UAHT;AAII,IAAA,EAAE,EAAG,UAJT;AAKI,IAAA,KAAK,EAAIY,SAAS,CAACX,QALvB;AAMI,IAAA,QAAQ,EAAEgC,WANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAaKnB,UAAU,CAACb,QAAX,CAAoBoC,MAApB,GAA6B,CAA7B,gBACG;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBvB,UAAU,CAACb,QAAjC,CADH,GAEG,IAfR,CAlFJ,eAqGI;AAAO,IAAA,OAAO,EAAC,OAAf;AAAuB,IAAA,SAAS,EAAC,eAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAII;AACI,IAAA,SAAS,EAAC,aADd;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,IAAA,EAAE,EAAG,OAJT;AAKI,IAAA,KAAK,EAAIW,SAAS,CAACV,KALvB;AAMI,IAAA,QAAQ,EAAE+B,WANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAaKnB,UAAU,CAACZ,KAAX,CAAiBmC,MAAjB,GAA0B,CAA1B,gBACG;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBvB,UAAU,CAACZ,KAAjC,CADH,GAEG,IAfR,CArGJ,eAwHI;AAAO,IAAA,OAAO,EAAC,OAAf;AAAuB,IAAA,SAAS,EAAC,eAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,eAII;AACI,IAAA,SAAS,EAAC,aADd;AAEI,IAAA,IAAI,EAAC,QAFT;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,IAAA,EAAE,EAAG,OAJT;AAKI,IAAA,KAAK,EAAIU,SAAS,CAACT,KALvB;AAMI,IAAA,QAAQ,EAAE8B,WANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAaKnB,UAAU,CAACX,KAAX,CAAiBkC,MAAjB,GAA0B,CAA1B,gBACG;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBvB,UAAU,CAACX,KAAjC,CADH,GAEG,IAfR,CAxHJ,eA2II;AAAO,IAAA,OAAO,EAAC,SAAf;AAAyB,IAAA,SAAS,EAAC,eAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAII;AACI,IAAA,SAAS,EAAC,aADd;AAEI,IAAA,IAAI,EAAC,SAFT;AAGI,IAAA,IAAI,EAAC,SAHT;AAII,IAAA,EAAE,EAAG,SAJT;AAKI,IAAA,KAAK,EAAIS,SAAS,CAACN,OALvB;AAMI,IAAA,QAAQ,EAAE2B,WANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAaKnB,UAAU,CAACR,OAAX,CAAmB+B,MAAnB,GAA4B,CAA5B,gBACG;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBvB,UAAU,CAACR,OAAjC,CADH,GAEG,IAfR,CA3IJ,eA8JI;AAAO,IAAA,OAAO,EAAC,MAAf;AAAsB,IAAA,SAAS,EAAC,eAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFJ,eAII;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,EAAE,EAAC,MAFP;AAGI,IAAA,QAAQ,EAAE2B,WAHd;AAII,IAAA,KAAK,EAAErB,SAAS,CAACL,IAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOI;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAPJ,eASI;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBATJ,eAWI;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAXJ,eAaI;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAbJ,eAeI;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAfJ,CAJJ,CA9JJ,eAuLI;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AACI,IAAA,IAAI,EAAE,UADV;AAEI,IAAA,EAAE,EAAG,OAFT;AAGI,IAAA,IAAI,EAAG,OAHX;AAII,IAAA,OAAO,EAAGK,SAAS,CAACJ,KAJxB;AAKI,IAAA,QAAQ,EAAEyB,WALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,qBAvLJ,eAqMI,oBAAC,KAAD,CAAO,MAAP;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,IAAI,EAAG,QAFX;AAGI,IAAA,MAAM,EAAC,WAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArMJ,CAFJ;AAiNH","sourcesContent":["import React, {useState} from \"react\";\nimport * as yup from 'yup';\nimport axios from 'axios';\n\n// import styler class for styled components\nimport Styler from \"../../assets/styles/styledComponents/styleClass\";\n\nexport default function Register(props){\n\n    // create new instance of styler class\n    const style = new Styler();\n\n    //Used to test field validation with taken username values from backend.\n    const testerFieldForUsernameAvailability = ['thisss','isaaa','tester'];\n\n    // set up yup validation\n    const formSchema_Student = yup.object().shape({\n\n        selector: yup\n            .string(),\n        userName: yup\n            .string()\n            .required(\"Username is required\")\n            .min(4, \"Username must be longer than 4 characters\"),\n            // .test('username-availability',\"Username is unavailable\",\n            //     function(testerFieldForUsernameAvailability){\n            //         testerFieldForUsernameAvailability.map(item=>{\n            //             item !== userName;\n            //         })\n            //     })\n        password: yup\n            .string()\n            .required(\"Please enter a password\")\n            .min(3,\"Password must be longer than 3 characters\"),\n        nameFirst: yup\n            .string()\n            .required(\"Please enter your first name\"),\n        nameLast: yup\n            .string()\n            .required(\"Please enter your last name\"),\n        email: yup\n            .string()\n            .email(\"Please enter a valid email address\")\n            .required(\"Email address required\"),\n        phone: yup\n            .number()\n            .typeError(\"Please enter a valid phone number\")\n            .required()\n            .min(10,\"Please enter a valid phone number with area code first\"),\n        address: yup\n            .string()\n            .required('Please enter your address'),\n        time: yup\n            .string()\n            .required(\"Please select a time slot\"),\n        terms: yup\n            .bool()\n            .required(\"Please confirm our terms and conditions\")\n            .oneOf([true],\"Please agree to our terms and conditions\")\n    });\n\n    const formSchema_Volunteer = yup.object().shape({\n        selector: yup\n            .string(),\n        userName: yup\n            .string()\n            .required(\"Username is required\")\n            .min(4, \"Username must be longer than 4 characters\"),\n            // .test('username-availability',\"Username is unavailable\",\n            //     function(testerFieldForUsernameAvailability){\n            //         testerFieldForUsernameAvailability.map(item=>{\n            //             item !== userName;\n            //         })\n            //     }),\n        password:yup\n            .string()\n            .required(\"Please enter your password\")\n            .min(5,\"Password must be at least 5 characters long\"),\n        nameFirst: yup\n            .string()\n            .required(\"Please enter your first name\"),\n        nameLast: yup\n            .string()\n            .required(\"Please enter your last name\"),\n        email: yup\n            .string()\n            .email(\"Please enter your email address\")\n            .required(\"Email address required\"),\n        phone: yup\n            .number()\n            .typeError(\"Please enter a valid phone number\")\n            .required()\n            .min(10,\"Please enter a valid phone number with area code first\"),\n        address: yup\n            .string()\n            .required('Please enter your address'),\n        time: yup\n            .string()\n            .required(\"Please select a time slot\"),\n        terms: yup\n            .bool()\n            .required(\"Please confirm our terms and conditions\")\n            .oneOf([true],\"Please agree to our terms and conditions\")\n    });\n    // Form state and error state respectively\n    const [formState, setFormState] = useState({\n        selector:\"\",\n        userName:\"\",\n        password:\"\",\n        nameFirst:\"\",\n        nameLast:\"\",\n        email:\"\",\n        phone:\"\",\n        address:\"\",\n        time:\"\",\n        terms:false\n    });\n\n    const [errorState, setErrorState] = useState({\n        selector:\"\",\n        userName:\"\",\n        password:\"\",\n        nameFirst:\"\",\n        nameLast:\"\",\n        email:\"\",\n        phone:\"\",\n        address:\"\",\n        time:\"\",\n        terms:false\n    });\n    // validation on input change\n    const validate = e => {\n        yup\n            .reach(formSchema_Student, e.target.name)\n            .validate(e.target.value)\n            .then(valid => {\n                setErrorState({\n                    ...errorState,[e.target.name]:\"\"\n                });\n            })\n            .catch(err => {\n                setErrorState({\n                    ...errorState,[e.target.name]:err.errors[0]\n                });\n            })\n    };\n\n    const formSubmit = e => {\n        e.preventDefault();\n        // If volunteer is selected post to volunteer api else submit to student api\n        formState.selector === 'volunteer'?\n            axios\n                .post(\"\")\n                .then(response => {\n                    console.log(response)\n                })\n                .catch( err => {\n                    console.log(err)\n                })\n        :\n            axios\n                .post(\"\")\n                .then(response => {\n                    console.log(response)\n                })\n                .catch( err => {\n                    console.log(err)\n                })\n    };\n\n    const inputChange = e =>{\n        e.persist();\n        validate(e);\n        let value = e.target.type === \"checkbox\" ? e.target.checked:e.target.value\n        setFormState({...formState, [e.target.name]:value})\n    };\n\n    return (\n\n        <form onSubmit={formSubmit} className=\"registerForm\">\n\n            <h2 className=\"signInTitle\">Register</h2>\n\n            <label htmlFor=\"selector\" className=\"registerLabel\">\n\n                Student or Volunteer?\n\n                <select\n                    name=\"selector\"\n                    id=\"selector\"\n                    onChange={inputChange}\n                    value={formState.selector}\n                >\n\n                    <option value=\"student\">Student</option>\n\n                    <option value=\"volunteer\">Volunteer</option>\n\n                </select>\n\n            </label>\n\n            <label></label>\n\n            <label htmlFor=\"userName\" className=\"registerLabel\">\n\n                <p>Username:</p>\n\n                <input\n                    className=\"signInInput\"\n                    type=\"text\"\n                    name=\"userName\"\n                    id = \"userName\"\n                    value = {formState.userName}\n                    onChange={inputChange}\n                />\n\n                {errorState.userName.length > 0 ? (\n                    <p className=\"error\">{errorState.userName}</p>\n                ) : null}\n\n            </label>\n\n            <label htmlFor=\"password\" className=\"registerLabel\">\n\n                <p>Password:</p>\n\n                <input\n                    className=\"signInInput\"\n                    type=\"password\"\n                    name=\"password\"\n                    id=\"password\"\n                    value={formState.password}\n                    onChange={inputChange}\n                />\n\n                {errorState.password.length > 0 ? (\n                    <p className=\"error\">{errorState.password}</p>\n                ) : null}\n\n            </label>\n\n            <label htmlFor=\"nameFirst\" className=\"registerLabel\">\n\n                <p>First Name:</p>\n\n                <input\n                    className=\"signInInput\"\n                    type=\"text\"\n                    name=\"nameFirst\"\n                    id = \"nameFirst\"\n                    value = {formState.nameFirst}\n                    onChange={inputChange}\n                />\n\n                {errorState.nameFirst.length > 0 ? (\n                    <p className=\"error\">{errorState.nameFirst}</p>\n                ) : null}\n\n            </label>\n\n            <label htmlFor=\"nameLast\" className=\"registerLabel\">\n\n                <p>Last Name:</p>\n\n                <input\n                    className=\"signInInput\"\n                    type=\"text\"\n                    name=\"nameLast\"\n                    id = \"nameLast\"\n                    value = {formState.nameLast}\n                    onChange={inputChange}\n                />\n\n                {errorState.nameLast.length > 0 ? (\n                    <p className=\"error\">{errorState.nameLast}</p>\n                ) : null}\n\n            </label>\n\n            <label htmlFor=\"email\" className=\"registerLabel\">\n\n                <p>Email:</p>\n\n                <input\n                    className=\"signInInput\"\n                    type=\"email\"\n                    name=\"email\"\n                    id = \"email\"\n                    value = {formState.email}\n                    onChange={inputChange}\n                />\n\n                {errorState.email.length > 0 ? (\n                    <p className=\"error\">{errorState.email}</p>\n                ) : null}\n\n            </label>\n\n            <label htmlFor=\"phone\" className=\"registerLabel\">\n\n                <p>Phone Number:</p>\n\n                <input\n                    className=\"signInInput\"\n                    type=\"number\"\n                    name=\"phone\"\n                    id = \"phone\"\n                    value = {formState.phone}\n                    onChange={inputChange}\n                />\n\n                {errorState.phone.length > 0 ? (\n                    <p className=\"error\">{errorState.phone}</p>\n                ) : null}\n\n            </label>\n\n            <label htmlFor=\"address\" className=\"registerLabel\">\n\n                <p>Address:</p>\n\n                <input\n                    className=\"signInInput\"\n                    type=\"address\"\n                    name=\"address\"\n                    id = \"address\"\n                    value = {formState.address}\n                    onChange={inputChange}\n                />\n\n                {errorState.address.length > 0 ? (\n                    <p className=\"error\">{errorState.address}</p>\n                ) : null}\n\n            </label>\n\n            <label htmlFor=\"time\" className=\"registerLabel\">\n\n                <p>Time Available:</p>\n\n                <select\n                    name=\"time\"\n                    id=\"time\"\n                    onChange={inputChange}\n                    value={formState.time}\n                >\n\n                    <option value=\"6am\">6:00AM - 9:00AM</option>\n\n                    <option value=\"9am\">9:00AM - 12:00PM</option>\n\n                    <option value=\"12pm\">12:00PM - 3:00PM</option>\n\n                    <option value=\"3pm\">3:00PM - 6:00PM</option>\n\n                    <option value=\"6pm\">6:00PM - 9:00PM</option>\n\n                </select>\n\n            </label>\n\n            <label htmlFor=\"terms\">\n\n                <input\n                    type =\"checkbox\"\n                    id = \"terms\"\n                    name = \"terms\"\n                    checked ={formState.terms}\n                    onChange={inputChange}\n                />\n\n                Terms Of Service\n\n            </label>\n\n            <style.Button\n                text=\"Register\"\n                type = \"submit\"\n                margin=\"10px auto\"\n            />\n\n        </form>\n\n    )\n\n}"]},"metadata":{},"sourceType":"module"}