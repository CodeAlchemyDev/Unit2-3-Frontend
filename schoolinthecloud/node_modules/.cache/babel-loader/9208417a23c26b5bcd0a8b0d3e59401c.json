{"ast":null,"code":"var _jsxFileName = \"/Users/amber/Lambda/03_Web Applications II/04_unit-3-build/Unit2-3-Frontend/schoolinthecloud/src/components/forms/SignInForm.js\";\nimport React, { useState, useEffect } from \"react\";\nimport * as yup from \"yup\";\nimport { apiAuth } from \"../../utils/apiAuth\";\nimport { changeHandler } from \"../../helpers/changeHandler\"; // import Button from \"../buttons/Buttons\";\n\nexport default function SignInForm(props) {\n  // Set up yup validation schema\n  const formSchema = yup.object().shape({\n    userName: yup.string().required(\"Please enter your username\").min(4, \"Username should be longer than 4 characters\"),\n    password: yup.string().required(\"Please enter your password\").min(3, \"Password should be longer than 3 characters\")\n  }); //   // Form state and error state respectively\n  //   const [formState, setFormState] = useState({\n  //     userName: \"\",\n  //     password: \"\",\n  //   });\n  //   const [errorState, setErrorState] = useState({\n  //     userName: \"\",\n  //     password: \"\",\n  //   });\n  //   // validation on input change\n  //   const validate = (e) => {\n  //     yup\n  //       .reach(formSchema, e.target.name)\n  //       .validate(e.target.value)\n  //       .then((valid) => {\n  //         setErrorState({\n  //           ...errorState,\n  //           [e.target.name]: \"\",\n  //         });\n  //       })\n  //       .catch((err) => {\n  //         setErrorState({\n  //           ...errorState,\n  //           [e.target.name]: err.errors[0],\n  //         });\n  //       });\n  //   };\n  // const inputChange = (e) => {\n  // \te.persist();\n  // \tconsole.log(e.target.value);\n  // \tvalidate(e);\n  // \tsetFormState({ ...formState, [e.target.name]: e.target.value });\n  // };\n\n  const formSubmit = e => {\n    // console.log(\"submit\");\n    // console.log(formState);\n    e.preventDefault();\n    apiAuth().post(\"/login\", {\n      formState\n    }).then(response => {\n      console.log(response);\n      localStorage.setItem(\"token\", response.data.token); // props.history.push(\"/\");\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formSubmit,\n    className: \"signInForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"signInTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, \"Sign In\"), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"userName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"Username:\", /*#__PURE__*/React.createElement(\"input\", {\n    className: \"signInInput\",\n    type: \"text\",\n    name: \"userName\",\n    id: \"userName\",\n    value: formState.userName,\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  })), errorState.userName.length > 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, errorState.userName) : null, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, \"Password:\", /*#__PURE__*/React.createElement(\"input\", {\n    className: \"signInInput\",\n    type: \"password\",\n    name: \"password\",\n    id: \"password\",\n    value: formState.password,\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  })), errorState.password.length > 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, errorState.password) : null, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, \"Login\")));\n}","map":{"version":3,"sources":["/Users/amber/Lambda/03_Web Applications II/04_unit-3-build/Unit2-3-Frontend/schoolinthecloud/src/components/forms/SignInForm.js"],"names":["React","useState","useEffect","yup","apiAuth","changeHandler","SignInForm","props","formSchema","object","shape","userName","string","required","min","password","formSubmit","e","preventDefault","post","formState","then","response","console","log","localStorage","setItem","data","token","catch","err","errorState","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport * as yup from \"yup\";\nimport { apiAuth } from \"../../utils/apiAuth\";\nimport { changeHandler } from \"../../helpers/changeHandler\";\n// import Button from \"../buttons/Buttons\";\n\nexport default function SignInForm(props) {\n  // Set up yup validation schema\n  const formSchema = yup.object().shape({\n    userName: yup\n      .string()\n      .required(\"Please enter your username\")\n      .min(4, \"Username should be longer than 4 characters\"),\n    password: yup\n      .string()\n      .required(\"Please enter your password\")\n      .min(3, \"Password should be longer than 3 characters\"),\n  });\n\n  //   // Form state and error state respectively\n  //   const [formState, setFormState] = useState({\n  //     userName: \"\",\n  //     password: \"\",\n  //   });\n\n  //   const [errorState, setErrorState] = useState({\n  //     userName: \"\",\n  //     password: \"\",\n  //   });\n\n  //   // validation on input change\n  //   const validate = (e) => {\n  //     yup\n  //       .reach(formSchema, e.target.name)\n  //       .validate(e.target.value)\n  //       .then((valid) => {\n  //         setErrorState({\n  //           ...errorState,\n  //           [e.target.name]: \"\",\n  //         });\n  //       })\n  //       .catch((err) => {\n  //         setErrorState({\n  //           ...errorState,\n  //           [e.target.name]: err.errors[0],\n  //         });\n  //       });\n  //   };\n  // const inputChange = (e) => {\n  // \te.persist();\n  // \tconsole.log(e.target.value);\n  // \tvalidate(e);\n  // \tsetFormState({ ...formState, [e.target.name]: e.target.value });\n  // };\n\n  const formSubmit = (e) => {\n    // console.log(\"submit\");\n    // console.log(formState);\n    e.preventDefault();\n    apiAuth()\n      .post(\"/login\", { formState })\n      .then((response) => {\n        console.log(response);\n        localStorage.setItem(\"token\", response.data.token);\n        // props.history.push(\"/\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <>\n      <form onSubmit={formSubmit} className=\"signInForm\">\n        <h2 className=\"signInTitle\">Sign In</h2>\n\n        <label htmlFor=\"userName\">\n          Username:\n          <input\n            className=\"signInInput\"\n            type=\"text\"\n            name=\"userName\"\n            id=\"userName\"\n            value={formState.userName}\n            onChange={changeHandler}\n          />\n        </label>\n\n        {errorState.userName.length > 0 ? (\n          <p className=\"error\">{errorState.userName}</p>\n        ) : null}\n\n        <label htmlFor=\"password\">\n          Password:\n          <input\n            className=\"signInInput\"\n            type=\"password\"\n            name=\"password\"\n            id=\"password\"\n            value={formState.password}\n            onChange={changeHandler}\n          />\n        </label>\n\n        {errorState.password.length > 0 ? (\n          <p className=\"error\">{errorState.password}</p>\n        ) : null}\n\n        <button type=\"submit\">Login</button>\n      </form>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}